import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import pylab
import scipy
from math import log, sqrt, exp
from scipy.stats import norm

X=pd.read_csv('C:\\Users\\sizeq\\Downloads\\X.csv', index_col='Date')
X.index=pd.to_datetime(X.index)
X.head()

plt.figure(figsize=(16,6))
X['Adj Close'].plot()
plt.legend(['X'],loc='upper right')

X['Return']=X['Adj Close'].pct_change(1)
X.Return

plt.hist(X.Return[1:])

X.CumReturn=X.Return.cumprod()
X.CumReturn

#monte carlo method

days=365
dt = 1/days
mu = X.Return[1:].mean()
mu
sigma=X.Return[1:].std()
sigma

def stock_monte_carlo(start_price,days,mu,sigma):
    price=np.zeros(days)
    price[0]=start_price
    
    shock=np.zeros(days)
    drift=np.zeros(days)
    
    for x in range(1, days):
        shock[x]=np.random.normal(loc = mu * dt, scale = sigma * np.sqrt(dt))
        drift[x]=mu * dt
        price[x]=price[x-1]+price[x-1] * (shock[x]+drift[x])
    return price


start_price = X['Adj Close'][-1]

for i in range(100):
    plt.plot(stock_monte_carlo(start_price, days, mu, sigma))
plt.xlabel("Days")
plt.ylabel("Price")
plt.title('Monte Carlo Analysis for X')

runs=1000
simulation=np.zeros(runs)
np.set_printoptions(threshold=5)
for run in range(runs):
    simulation[run]=stock_monte_carlo(start_price, days, mu, sigma)[days-1]
q=np.percentile(simulation, 1)
plt.hist(simulation, bins=200)
